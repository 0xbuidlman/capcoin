#!/usr/bin/env node
var program = require('commander');
var allowed = ['1day', '7day', '30day', '90day', '180day', '365day', 'all'];
var allowedTypes = ['price', 'volume', 'market_cap'];
var babar = require('babar');

program
  .description('Charts')
  .command('charts', 'charts history')
  .usage('[options] <SYMBOL>')
  .option('-t, --timeframe [1day]', 'Choose a time frame ['+allowed.join(',')+']', '1day')
  .option('--type [price]', 'Choose the data type ['+allowedTypes.join(',')+']', 'price');

var cli = require('../cli')(program);

// print help with no args
if (program.args.length < 1 || program.args[0] == '') {
   program.help();
}

var symbol = program.args[0];

function arrayContains(needle, arrhaystack)
{
  return (arrhaystack.indexOf(needle) > -1);
}

if (!arrayContains(program.timeframe, allowed)) {
  console.error('unknown timeframe');
  process.exit(1);
}

if (!arrayContains(program.type, allowedTypes)) {
  console.error('unknown type');
  process.exit(1);
}

var config = {
  color: 'green',
  width: process.stdout.columns || 80,
  height: 20,
  yFractions: 1
};

function displayChart(result) {
  var data = result[program.type];
  config.caption = program.args[0] + ' ' + program.type;
  data = data.map(function(item, index) {
    return [index, item[1]]
  });
  console.log(babar(data, config));
}

cli
  .commands
  .history(program.args[0], program.timeframe)
  .then(displayChart)
  .catch(console.error)
